# Указываем полный путь к оболочке bash
#!/bin/bash

# Проверяем, что скрипт запущен с флагом -help и выводим сообщение об этом
if [ "$1" == "--help" ]; then
	echo "Для работы скрипта требуется ввести два аргумента: <файл с вопросами> <файл с ответами>"
	exit 1
fi

# Проверяем, случай, когда количество аргументов не равно 2 и выводим сообщение о справке
if [ "$#" -ne 2 ]; then
	echo "Неверное количество аргументов. Используйте флаг <--help> для получения справки"
	exit 1
fi

# Считываем названия файлов из аргументов и сохраняем их в переменные
filename_questions=$1
filename_answers=$2

# Проверяем существует ли файл с вопросами и выводим сообщение с ошибкой, если его не существует
if [ ! -e "$filename_questions" ]; then
	echo "Неверное имя файла с вопросами"
	exit 1
fi

# Проверяем существует ли файл с ответами и выводим сообщение с ошибкой, если его не существует
if [ ! -e "$filename_answers" ]; then
	echo "Неверное имя файла с ответами"
	exit 1
fi

# Построчно читаем файл с вопросами и сохраняем в переменные те значения, которые в строке разделяются с помощью :
while IFS=':' read question_number question answer_options correct_answer_number; do

	# Ищем в файле с ответами строку, которая соответствует данному вопросу по номеру, затем
	# разделяем строку по : и значение второго поля после : записываем в переменную
	read answer_from_user <<< $(grep "^$question_number:" "$filename_answers" | cut -d ':' -f2)

	# Сравниваем ответ пользователя и верный ответ
	# В зависимости от результата сравнения записываем в итоговую переменную соответствующее значение
	if [ "$answer_from_user" -eq $correct_answer_number ]; then
		output="Верно"
	else
		# Находим правильный ответ среди всех вариантов, разделенных запятой по его номеру
		output="Неверно, правильный ответ: $(echo "$answer_options" | cut -d ',' -f$((correct_answer_number)))"
	fi

	# Выводим на экран номер вопроса, вопрос и результат
	echo "$question_number $question: $output"

done < "$filename_questions"
exit 0
